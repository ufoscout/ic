# job can run only in docker
.e2e-test-base:
  extends:
    # Use untrusted builders for e2e tests.
    # The trusted builders don't work with IPv6 right now.
    - .ubuntu-nix-docker-pinned-dc
    - .rules-parent-pipeline
  stage: guest-os-test
  retry: 2
  # The e2e tests are flaky and impacting developer merges
  # https://dfinity.slack.com/archives/C012RDFNK7U/p1618233620112900
  variables:
    GUEST_OS_TEST_TIMEOUT: 2400
    # This var is needed as some shell scripts depend on it.
    E2E_TEST_TIMEOUT: 480

# job can run in docker or in k8s
.e2e-test-base-k8s:
  extends:
    # Use untrusted builders for e2e tests.
    # The trusted builders don't work with IPv6 right now.
    - .ubuntu-nix-docker-k8s-pinned-dc
    - .rules-parent-pipeline
  stage: guest-os-test
  retry: 2
  # The e2e tests are flaky and impacting developer merges
  # https://dfinity.slack.com/archives/C012RDFNK7U/p1618233620112900
  variables:
    GUEST_OS_TEST_TIMEOUT: 2400
    # This var is needed as some shell scripts depend on it.
    E2E_TEST_TIMEOUT: 480

.run-farm-based-test: &run-farm-based-test |
  IC_VERSION_ID=$CI_COMMIT_SHA
  export IC_VERSION_ID
  #XXX(marko): we need to change this
  # binaries are needed for run-system-tests.py
  "$CI_PROJECT_DIR"/gitlab-ci/src/artifacts/rclone_download.py \
      --git-rev="$CI_COMMIT_SHA" --remote-path="release" \
      --out="artifacts/release"
  # canisters are needed for run-system-tests.py
  "$CI_PROJECT_DIR"/gitlab-ci/src/artifacts/rclone_download.py \
      --git-rev="$CI_COMMIT_SHA" --remote-path="canisters" \
      --out="artifacts/canisters"
  DATE="$(date +%Y%m%d_%H%M%S)"
  WORKING_DIR="${CI_PROJECT_DIR}/working_dir/"
  mkdir -p "$WORKING_DIR"
  echo "${DATE}" > "${CI_PROJECT_DIR}/working_dir/date.txt"
  if [[ -z "${LOG_DEBUG_OVERRIDES:-}" ]]; then
    LOG_DEBUG_OVERRIDES_OPTS=()
  else
    LOG_DEBUG_OVERRIDES_OPTS=("--log-debug-overrides" "${LOG_DEBUG_OVERRIDES}")
  fi

  # Logs produced during execution of the system tests are stored away in a structured way, i.e. one file per test.
  # Unstructured logs, i.e. those which bypassed the logger and were outputed directly to stdout/stderr,
  # are forwarded to a separate file.
  # All lines produced by the logger share the same structure: e.g. "Nov 10 13:20:30.931 INFO ...".
  # Hence, the fourth column can be used to distinguish structured from unstructerd logs.
  $SHELL_WRAPPER "${CI_PROJECT_DIR}/rs/tests/run-system-tests.py" \
    --suite="${SUITE_NAME}" \
    --working-dir="${WORKING_DIR}" \
    "${LOG_DEBUG_OVERRIDES_OPTS[@]}" \
  | tee "${WORKING_DIR}/unstructured-logs.log" \
  | awk '$4 ~ /CRIT|ERRO|WARN|INFO|DEBG|TRCE/'

.system-tests:
  extends:
    - .e2e-test-base-k8s
  needs:
    - pipeline: $PARENT_PIPELINE_ID
      job: bazel-test-all
      artifacts: false
    - job: guest-os-updateimg-build
      artifacts: false
    - job: guest-os-updateimg-build-dev
      artifacts: false
    - job: boundary-os-diskimg
      artifacts: false
    - job: boundary-os-diskimg-dev
      artifacts: false
    - job: boundary-os-diskimg-snp-dev
      artifacts: false
  artifacts:
    when: always
    paths:
      - "working_dir/"
  # Include the parent pipeline source so that hotfix pipelines have their own lock.
  resource_group: $CI_JOB_NAME-$CI_PARENT_PIPELINE_SOURCE-$FARM_SHARD
  script:
    - *run-farm-based-test

.with-monitoring:
  variables:
    # we need debug-level logs from the following components for IC policy monitoring
    LOG_DEBUG_OVERRIDES: "ic_consensus::consensus::batch_delivery,ic_artifact_manager::processors,ic_consensus::consensus,ic_transport::control_plane"

system-tests-pre-master:
  extends: .system-tests
  variables:
    SUITE_NAME: "pre_master"

boundary-nodes-pre-master:
  extends: .system-tests
  variables:
    SUITE_NAME: "boundary_nodes_pre_master"

create-subnet-pre-master:
  extends:
    - .system-tests
    - .with-monitoring  # This pre-master suite is used for e2e checking of monpoly_pipeline
  variables:
    SUITE_NAME: "create_subnet_pre_master"

ckbtc-pre-master:
  extends: .system-tests
  variables:
    SUITE_NAME: "ckbtc_pre_master"
  script:
    - |
    - *run-farm-based-test

boundary-nodes-sev-snp-pre-master:
  extends: .system-tests
  variables:
    SUITE_NAME: "boundary_nodes_sev_snp_pre_master"
  # TODO: at the moment we have a single farm host which supports AmdSevSnp.
  # It's a bit risky to have a pre-master job that could fail because of this.
  # So we allow failures for now until we have more hosts supporting AmdSevSnp.
  # See: https://dfinity.atlassian.net/browse/VER-1863
  allow_failure: true

tecdsa-pre-master:
  extends: .system-tests
  variables:
    SUITE_NAME: "tecdsa_pre_master"

test-prod-test-driver-e2e:
  extends:
   - .system-tests
   - .rules-test-prod-test-driver-e2e
  script:
    - |
      # IC_VERSION_ID is needed for run-system-tests.py.
      IC_VERSION_ID="$CI_COMMIT_SHA"
      export IC_VERSION_ID
      # required binary artifacts
      mkdir -p artifacts/release
      pushd artifacts/release
      curl -sfS --retry 5 --retry-delay 10 \
         "http://download.proxy.dfinity.systems:8080/ic/$CI_COMMIT_SHA/release/prod-test-driver.gz" -O
      popd
       # required canisters
      "$CI_PROJECT_DIR"/gitlab-ci/src/artifacts/rclone_download.py \
          --git-rev="${IC_VERSION_ID}" --remote-path="canisters" \
          --out="artifacts/canisters"
      WORKING_DIR="${CI_PROJECT_DIR}/working_dir/"
      mkdir -p "$WORKING_DIR"
      # Logs produced during execution of the system tests are stored away in a structured way, i.e. one file per test.
      # Unstructured logs, i.e. those which bypassed the logger and were outputed directly to stdout/stderr,
      # are forwarded to a separate file.
      # All lines produced by the logger share the same structure: e.g. "Nov 10 13:20:30.931 INFO ...".
      # Hence, the fourth column can be used to distinguish structured from unstructured logs.
      $SHELL_WRAPPER "${CI_PROJECT_DIR}/rs/tests/tests_e2e/test_prod_test_driver_e2e.py" \
            | tee "${WORKING_DIR}/unstructured-logs.log" \
            | awk '$4 ~ /CRIT|ERRO|WARN|INFO|DEBG|TRCE/'

rosetta-pre-master:
  extends: .system-tests
  variables:
    SUITE_NAME: "rosetta"
  script:
    - |
      # Ensure that rosetta 3rd-party dependencies are available
      # shellcheck disable=SC1090
      . "${CI_PROJECT_DIR}/rs/tests/prepare-rosetta-deps.sh"
    - *run-farm-based-test

subnet-recovery-pre-master:
  extends: .system-tests
  variables:
    SUITE_NAME: "subnet_recovery"
  script:
    - |
    - *run-farm-based-test

upgrade-compatibility-pre-master:
  extends: .system-tests
  needs:
    - job: cargo-build-release-linux-native
      artifacts: false
    - pipeline: $PARENT_PIPELINE_ID
      job: bazel-test-all
      artifacts: false
    - job: guest-os-updateimg-build
      artifacts: false
    - job: guest-os-updateimg-build-dev
      artifacts: false
    - job: boundary-os-diskimg-dev
      artifacts: false
  artifacts:
    paths:
    - "working_dir/"
  variables:
    SUITE_NAME: "upgrade_compatibility"
  script:
    - |
      # release
      "$CI_PROJECT_DIR"/gitlab-ci/src/artifacts/rclone_download.py \
          --git-rev="$CI_COMMIT_SHA" --remote-path="release" \
          --out="artifacts/release"

      mkdir -p test-tools-tmp
      IC_ADMIN="test-tools-tmp/ic-admin"
      gunzip -c "artifacts/release/ic-admin.gz" > "${IC_ADMIN}"
      chmod +x "${IC_ADMIN}"

      # read target version from testnet/mainnet_revisions.json
      # the target version is updated by the release team upon release
      ROOT_SUBNET_ID="tdb26-jop6k-aogll-7ltgs-eruif-6kk7m-qpktf-gdiqx-mxtrf-vb5e6-eqe"
      TARGET_VERSION=$(jq -r ".subnets.\"${ROOT_SUBNET_ID}\"" testnet/mainnet_revisions.json)
      export TARGET_VERSION
    - *run-farm-based-test

spec-compliance-pre-master:
  extends: .system-tests
  script:
    - |
      # binaries are needed for run-system-tests.py
      "$CI_PROJECT_DIR"/gitlab-ci/src/artifacts/rclone_download.py \
          --git-rev="$CI_COMMIT_SHA" --remote-path="release" \
          --out="artifacts/release"
      # canisters are needed for run-system-tests.py
      "$CI_PROJECT_DIR"/gitlab-ci/src/artifacts/rclone_download.py \
          --git-rev="$CI_COMMIT_SHA" --remote-path="canisters" \
          --out="artifacts/canisters"

      # requirement of run-system-tests.py
      IC_VERSION_ID=$CI_COMMIT_SHA
      export IC_VERSION_ID

      "$SHELL_WRAPPER" nix-shell -p "(import ./nix {}).ic-ref" --run "
        ${CI_PROJECT_DIR}/rs/tests/run-system-tests.py --suite=spec_compliance
      "

.build-and-test-monpoly-docker-e2e: &build-and-test-monpoly-docker-e2e |
  # build monpoly_pipeline container image
  docker build --build-arg MONPOLY_PIPELINE_GIT_REVISION="${CI_COMMIT_SHA}" -t monpoly_pipeline:"${CI_COMMIT_SHA}" ./policy-monitoring

  TEST_DRIVER_ARTIFACTS="${CI_PROJECT_DIR}/working_dir"
  echo "=== Listing contents of ${TEST_DRIVER_ARTIFACTS} ==="
  find "${TEST_DRIVER_ARTIFACTS}" -type d -printf '%d\t%P\n' | sort -nk1 | cut -f2-

  # run monpoly_pipeline docker container with timeout 360 seconds
  MONPOLY_DID=$(docker run -d -it --rm monpoly_pipeline:"${CI_COMMIT_SHA}" "sleep 360")
  docker cp "${TEST_DRIVER_ARTIFACTS}" "${MONPOLY_DID}":/work/system_tests_working_dir
  docker exec "${MONPOLY_DID}" python3 -m tests.monpoly_io
  docker exec "${MONPOLY_DID}" python3 -m tests.mfotl_sanity
  docker exec "${MONPOLY_DID}" ls -alh /work
  docker exec "${MONPOLY_DID}" python3 main.py --fail \
    --system_tests_working_dir /work/system_tests_working_dir --mode universal_policy pre_processor_test

  # clean the container
  docker rm -f "${MONPOLY_DID}"

test-monpoly-docker:
  extends:
    - .e2e-test-base
  stage: prod-tests
  script:
    - set -euo pipefail
    - *build-and-test-monpoly-docker-e2e
  needs:
    - create-subnet-pre-master  # Use the logs produced by this system test in e2e tests of monpoly_pipeline
